{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;AClCkC;AAClC;AACA;AACO;AACP;AACA;AACA,kBAAkB,+CAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,mCAAmC,uDAAuD;AAC1F;AACA;AACA;AACA,KAAK;AACL;;;;;;UCzBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;ACNmC;AACsB;AACzD;AACA;AACA,IAAI,gDAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8CAAO;AACnB,YAAY,gDAAW;AACvB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,YAAY,iDAAU;AACtB,YAAY,gDAAW;AACvB;AACA;AACA;AACA;AACA,YAAY,iDAAU;AACtB,YAAY,gDAAW;AACvB;AACA,KAAK;AACL,CAAC,E","sources":["webpack://gestorTareas/./src/task.js","webpack://gestorTareas/./src/ui.js","webpack://gestorTareas/webpack/bootstrap","webpack://gestorTareas/webpack/runtime/define property getters","webpack://gestorTareas/webpack/runtime/hasOwnProperty shorthand","webpack://gestorTareas/webpack/runtime/make namespace object","webpack://gestorTareas/./src/index.js"],"sourcesContent":["// obtener la lista de tareas del alacenamiento del navegador \"localStorage\"\r\nlet tasks = JSON.parse(localStorage.getItem('tasks')) || []; \r\n\r\n// Función para poder llevar las tareas de la lista \r\nexport const getTasks = ( ) => tasks;\r\n\r\n// Función para agregar una tarea a la lista de tareas\r\nexport const addTask = (task) => {\r\n    const newTask = {\r\n        id: Date.now(),\r\n        text: task,\r\n        completed: false,\r\n    };\r\n    tasks.push(newTask);\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n};\r\n\r\n// Función para eliminar una tarea de la lista\r\nexport const deleteTask = (id) => {\r\n    tasks = tasks.filter((task) => task.id !== parseInt(id));\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n};\r\n\r\n// Función para actualizar una tarea de la lista\r\n\r\nexport const toggleTask = (id) => {\r\n    tasks = tasks.map((task) => {\r\n        if(task.id === parseInt(id)) {\r\n            task.completed = !task.completed;\r\n        }\r\n        return task;\r\n\r\n    });\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n};","import { getTasks } from \"./task\";\r\n\r\n// Función para mostrarle al usuario las tareas\r\nexport const renderTasks = () => {\r\n    const taskList = document.getElementById(\"task-list\");\r\n    taskList.innerHTML = '';\r\n    const tasks = getTasks();\r\n\r\n    tasks.forEach((tasks) => {\r\n        const li = document.createElement(\"li\");\r\n        li.setAttribute(\"data-id\", tasks.id);\r\n\r\n        // Añadir clase solo si la tarea está completada\r\n        if(tasks.completed === true) {\r\n            li.classList.add(\"completed\");\r\n        }\r\n\r\n        li.innerHTML = `\r\n        ${tasks.text}\r\n        <button class=\"delete\"> Eliminar </button>\r\n        <button class=\"toggle\"> ${ tasks.completed === false ? \"Completar\" : \"Deshacer\" } </button>\r\n        `;\r\n\r\n        taskList.appendChild(li);\r\n    });\r\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { renderTasks } from \"./ui\";\r\nimport { addTask, deleteTask, toggleTask } from \"./task\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    renderTasks();\r\n\r\n    document.getElementById(\"task-form\").addEventListener(\"submit\", (e) => {\r\n        e.preventDefault();\r\n\r\n        const taskInput = document.getElementById(\"task-input\").value;\r\n\r\n        if(taskInput !== \"\") {\r\n            addTask(taskInput);\r\n            renderTasks();\r\n            // Limpiar el valor el input\r\n            document.getElementById(\"task-input\").value = \"\";\r\n        }\r\n    });\r\n\r\n    document.getElementById(\"task-list\").addEventListener(\"click\", (e) => {\r\n        if(e.target.classList.contains(\"delete\")) {\r\n            const taskId = e.target.parentElement.getAttribute(\"data-id\");\r\n            deleteTask(taskId);\r\n            renderTasks();\r\n        }\r\n\r\n        if(e.target.classList.contains(\"toggle\")) {\r\n            const taskId = e.target.parentElement.getAttribute(\"data-id\");\r\n            toggleTask(taskId);\r\n            renderTasks();\r\n        }\r\n    });\r\n});"],"names":[],"sourceRoot":""}